import{aH as r}from"./index-Dulrw462.js";const c=async n=>await(await fetch(`resources/${n}`)).json(),d=async()=>await c("config.json"),l=async(n,t)=>await c(`indicators/indicators-${n}-ADM${t}.json`),u=async(n,t)=>await c(`geojson/geoBoundaries-${n}-ADM${t}_simplified.geojson`),g=r("app",{state:()=>({loading:!0,appConfig:null,selectedCountryId:"",selectedIndicator:"",admin1Indicators:{},admin1Geojson:{},admin2Indicators:{},admin2Geojson:{}}),getters:{selectedIndicators:n=>{const{selectedCountryId:t,admin1Indicators:e,admin2Indicators:s}=n;if(!t)return Object.assign({},...Object.values(e));const i=Object.entries(e).filter(([o,a])=>o!==t).map(([o,a])=>a);return Object.assign({},s[t],...i)},selectedFeatures:n=>{const{selectedCountryId:t,admin1Geojson:e,admin2Geojson:s}=n;if(!t)return Object.values(e).flatMap(o=>o.features);const i=Object.entries(e).filter(([o,a])=>o!=t).flatMap(([o,a])=>a.features);return[...s.features,...i]}},actions:{async initialiseData(){this.appConfig=await d();const n={},t={},e=1;for(const s of this.appConfig.countries)n[s]=await l(s,e),t[s]=await u(s,e);this.selectedIndicator=Object.keys(this.appConfig.indicators)[0],Object.assign(this.admin1Indicators,n),Object.assign(this.admin1Geojson,t),this.loading=!1}}});export{g as u};
