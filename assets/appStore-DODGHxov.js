import{aH as d}from"./index-DTjqiK88.js";const o=async t=>(await fetch(`resources/${t}`)).json(),l=async()=>await o("config.json"),c=async(t,e)=>await o(`indicators/indicators-${t}-ADM${e}.json`),r=async(t,e)=>await o(`geojson/geoBoundaries-${t}-ADM${e}_simplified.geojson`),g=d("app",{state:()=>({loading:!0,appConfig:null,selectedCountryId:"",selectedIndicator:"",admin1Indicators:{},admin1Geojson:{},admin2Indicators:{},admin2Geojson:{}}),getters:{selectedIndicators:t=>{const{selectedCountryId:e,admin1Indicators:n,admin2Indicators:i}=t;if(!e)return Object.assign({},...Object.values(n));const a=Object.entries(n).filter(([s])=>s!==e).map(([,s])=>s);return Object.assign({},i[e],...a)},selectedFeatures:t=>{const{selectedCountryId:e,admin1Geojson:n,admin2Geojson:i}=t;if(!e)return Object.values(n).flatMap(s=>s.features);const a=Object.entries(n).filter(([s])=>s!==e).flatMap(([,s])=>s.features);return[...i[e].features,...a]}},actions:{async initialiseData(){this.appConfig=await l();const t={},e={},n=1;for(const i of this.appConfig.countries)t[i]=await c(i,n),e[i]=await r(i,n);this.selectedIndicator=Object.keys(this.appConfig.indicators)[0],Object.assign(this.admin1Indicators,t),Object.assign(this.admin1Geojson,e),this.loading=!1},async selectCountry(t){if(t===this.selectedCountryId){this.selectedCountryId="";return}this.loading=!0;const e=2;t in this.admin2Indicators||(this.admin2Indicators[t]=await c(t,e)),t in this.admin2Geojson||(this.admin2Geojson[t]=await r(t,e)),this.selectedCountryId=t,this.loading=!1}}});export{g as u};
