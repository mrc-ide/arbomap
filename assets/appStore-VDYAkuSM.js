import{aH as l}from"./index-CEMaLNQU.js";const c=async t=>await(await fetch(`resources/${t}`)).json(),f=async()=>await c("config.json"),r=async(t,n)=>await c(`indicators/indicators-${t}-ADM${n}.json`),d=async(t,n)=>await c(`geojson/geoBoundaries-${t}-ADM${n}_simplified.geojson`),g=l("app",{state:()=>({loading:!0,appConfig:null,selectedCountryId:"",selectedIndicator:"",admin1Indicators:{},admin1Geojson:{},admin2Indicators:{},admin2Geojson:{}}),getters:{selectedIndicators:t=>{const{selectedCountryId:n,admin1Indicators:s,admin2Indicators:e}=t;if(!n)return Object.assign({},...Object.values(s));const o=Object.entries(s).filter(([i,a])=>i!==n).map(([i,a])=>a);return Object.assign({},e[n],...o)},selectedFeatures:t=>{const{selectedCountryId:n,admin1Geojson:s,admin2Geojson:e}=t;if(!n)return Object.values(s).flatMap(i=>i.features);const o=Object.entries(s).filter(([i,a])=>i!=n).flatMap(([i,a])=>a.features);return[...e[n].features,...o]}},actions:{async initialiseData(){this.appConfig=await f();const t={},n={},s=1;for(const e of this.appConfig.countries)t[e]=await r(e,s),n[e]=await d(e,s);this.selectedIndicator=Object.keys(this.appConfig.indicators)[0],Object.assign(this.admin1Indicators,t),Object.assign(this.admin1Geojson,n),this.loading=!1},async selectCountry(t){if(t===this.selectedCountryId){this.selectedCountryId="";return}this.loading=!0;const n=2;t in this.admin2Indicators||(this.admin2Indicators[t]=await r(t,n)),t in this.admin2Geojson||(this.admin2Geojson[t]=await d(t,n)),this.selectedCountryId=t,this.loading=!1}}});export{g as u};
